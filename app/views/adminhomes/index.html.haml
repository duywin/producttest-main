%head
  %title Admin Dashboard
  - if session[:welcome_alert_shown]
    = javascript_tag do
      alert("Welcome, #{@account.username if @account}!")
      - session.delete(:welcome_alert_shown)
  = csrf_meta_tags
  = csp_meta_tag
%body
  .jumbotron.text-center.app-color
    %h1 Admin dashboard

  %nav.navbar.navbar-expand-lg.navbar-light.app-color.topnav{ style: "margin-top: -10px" }
    .container-fluid
      %button.navbar-toggler{
        "aria-controls" => "navbarNavDropdown",
        "aria-expanded" => "false",
        "aria-label" => "Toggle navigation",
        "data-bs-target" => "#navbarNavDropdown",
        "data-bs-toggle" => "collapse",
        type: "button"
      }
        %span.navbar-toggler-icon
      #navbarNavDropdown.collapse.navbar-collapse
        %ul.navbar-nav.w-100.justify-content-around
          %li.nav-item.active.flex-fill
            %a.nav-link{ href: adminhomes_path } Home
          %li.nav-item.flex-fill
            %a.nav-link{ href: products_path } Product
          %li.nav-item.flex-fill
            %a.nav-link{ href: categories_path } Type
          %li.nav-item.flex-fill
            %a.nav-link{ href: accounts_path } Account
          %li.nav-item.flex-fill
            %a.nav-link{ href: carts_path } Sales

  %main.content.py-4
    %h2.text-center Admin Dashboard
    .text-end
      = button_to 'Log out', adminlogout_path, method: :delete, class: 'btn btn-danger'

    #category-chart.my-4{ style: "width: 100%; height: 400px;" }
    %h2.text-center Sales Chart
    #sales-chart.my-4{ style: "width: 100%; height: 400px;" }
    %h2.text-center Monthly Category Sales
    #monthly-category-sales-chart.my-4{ style: "width: 100%; height: 400px;" }
    %h2.text-center Monthly Product Sales by Category
    #current-month-category-sales-chart.my-4{ style: "width: 100%; height: 400px;" }

  %section.top-product.text-center.py-4
    - if @top_product
      %h4 Top Product
      %p
        The most sold product is
        = succeed "." do
          %strong= @top_product.name
        %strong= @top_product.total_quantity
        units. Below is a preview of the product:
      = image_tag(@top_product.picture, alt: @top_product.name, class: 'top-product-picture') if @top_product.picture.present?
    - else
      %p No product has been sold.

  %footer.custom-footer.py-4.app-color
    %h1.text-center Admin Interface

  %script{ src: "https://code.highcharts.com/highcharts.js" }
  %script{ src: "https://code.highcharts.com/highcharts-3d.js" }
  %script{ src: "https://cdn.jsdelivr.net/npm/apexcharts@3.36.0/dist/apexcharts.min.js" }

:javascript
  document.addEventListener('DOMContentLoaded', function () {
    // Highcharts setup for Category Totals Pie Chart
    function fetchCategoryData() {
      fetch('#{adminhomes_category_totals_path}')
        .then(response => response.json())
        .then(data => {
          Highcharts.chart('category-chart', {
            chart: {
              type: 'pie',
              options3d: {
                enabled: true,
                alpha: 45,
                beta: 0
              }
            },
            title: { text: 'Category Totals' },
            tooltip: { pointFormat: '{series.name}: {point.percentage:.1f}%' },
            plotOptions: {
              pie: {
                allowPointSelect: true,
                cursor: 'pointer',
                depth: 35,
                dataLabels: {
                  enabled: true,
                  format: '{point.name}',
                  style: {
                    color: (Highcharts.theme && Highcharts.theme.contrastTextColor) || 'red'
                  },
                  connectorColor: 'silver'
                }
              }
            },
            series: [{ name: 'Total', data: data }]
          });
        });
    }
    fetchCategoryData();
    setInterval(fetchCategoryData, 60000); // Refresh category data every minute

    // ApexCharts setup for Monthly Sales Line Chart
    const salesData = JSON.parse('#{@monthly_sales_js}');
    const sortedSalesData = Object.keys(salesData)
      .sort()  // Ensures months are in ascending order (e.g., Jan, Feb, Mar)
      .reduce((acc, key) => {
        acc[key] = salesData[key];
        return acc;
      }, {});

    const monthsForSales = Object.keys(sortedSalesData); // Unique variable name
    const quantities = Object.values(sortedSalesData);

    const options = {
      chart: { height: 350, type: 'line', stacked: false },
      dataLabels: { enabled: false },
      colors: ['#FF1654'],
      series: [{ name: 'Products Sold', data: quantities }],
      stroke: { width: 4 },
      xaxis: {
        categories: monthsForSales,
        title: { text: 'Month' },
        axisBorder: { show: true },
        axisTicks: { show: true }
      },
      yaxis: { title: { text: 'Quantity Sold' } },
      tooltip: { shared: true, intersect: false },
      legend: { horizontalAlign: 'left', offsetX: 40 }
    };

    var chart = new ApexCharts(document.querySelector("#sales-chart"), options);
    chart.render();

    // Highcharts setup for Monthly Category Sales Bar Chart
    const categorySalesData = JSON.parse('#{@monthly_category_sales_js}');
    const monthsForCategorySales = Object.keys(categorySalesData); // Unique variable name
    const seriesData = {};

    monthsForCategorySales.forEach(month => {
      Object.entries(categorySalesData[month]).forEach(([category, quantity]) => {
        if (!seriesData[category]) {
          seriesData[category] = [];
        }
        seriesData[category].push(quantity);
      });
    });

    Highcharts.chart('monthly-category-sales-chart', {
      chart: { type: 'column' },
      title: { text: 'Monthly Sales by Product Category' },
      xAxis: { categories: monthsForCategorySales, crosshair: true },
      yAxis: { min: 0, title: { text: 'Products Sold' } },
      tooltip: {
        headerFormat: '<span style="font-size:10px">{point.key}</span><table>',
        pointFormat: '<tr><td style="color:{series.color};padding:0">{series.name}: </td>' +
          '<td style="padding:0"><b>{point.y} units</b></td></tr>',
        footerFormat: '</table>',
        shared: true,
        useHTML: true
      },
      plotOptions: { column: { pointPadding: 0.2, borderWidth: 0 } },
      series: Object.entries(seriesData).map(([name, data]) => ({ name, data }))
    });
  });

  const categorySalesData = JSON.parse('#{@current_month_category_sales.to_json}');

  const donutOptions = {
    chart: { type: 'donut', height: 350 },
    series: categorySalesData.map(item => item.y),
    labels: categorySalesData.map(item => item.name),
    colors: ['#1E90FF', '#FF7F50', '#3CB371', '#FFD700', '#FF69B4', '#BA55D3', '#87CEEB'],
    title: { text: 'This Month' },
    plotOptions: {
      pie: {
        donut: {
          size: '65%'
        }
      }
    },
    tooltip: {
      y: { formatter: value => `${value} units` }
    }
  };

  const donutChart = new ApexCharts(document.querySelector("#current-month-category-sales-chart"), donutOptions);
  donutChart.render();
